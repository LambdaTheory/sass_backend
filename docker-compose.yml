services:
  # 主应用服务
  daojusaas-api:
    build:
      context: .
      dockerfile: Dockerfile
      no_cache: true
    container_name: daojusaas-api
    ports:
      - "3389"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://daojusaas:${MYSQL_PASSWORD}@mysql:3306/daojusaas
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
    volumes:
      - ./logs:/app/logs
    networks:
      - itemsaas-network
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy

  # 定时任务服务
  daojusaas-cron:
    build:
      context: .
      dockerfile: docker/Dockerfile.cron
      no_cache: true
    container_name: daojusaas-cron
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://daojusaas:${MYSQL_PASSWORD}@mysql:3306/daojusaas
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./logs:/var/log
    networks:
      - itemsaas-network
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy

  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: daojusaas-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=daojusaas
      - MYSQL_USER=daojusaas
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306"
    networks:
      - itemsaas-network
    restart: unless-stopped
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        timeout: 20s
        retries: 10
        start_period: 40s



volumes:
  mysql_data:

networks:
  itemsaas-network:
    driver: bridge